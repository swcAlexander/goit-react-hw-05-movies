{"version":3,"file":"static/js/802.2adc0da8.chunk.js","mappings":"wQAEaA,EAAW,mDACXC,EAAU,4CACVC,EAAI,qCAEFC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BC,GAA5B,8FAAsCC,EAAtC,+BAAoD,GAC5CC,EAAe,CACnBC,OAAQ,MACRC,IAAKJ,EACLK,OAAQ,CACNC,QAAS,mCACTC,MAAON,IANb,mBAU2BO,EAAAA,EAAAA,GAAMN,GAVjC,cAUUO,EAVV,yBAWWA,EAASC,MAXpB,gCAaIC,EAAAA,GAAAA,KAAW,8DAbf,iFAgBA,KAlBO,SAEqB,GAAbZ,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,yGC4Bf,UA9BgB,WACd,IAAQa,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEMnB,EAAAA,EAAAA,IAAa,GAAD,OAAID,EAAAA,GAAJ,YAAYc,EAAZ,aAFlB,OAEXH,EAFW,OAGjBO,EAAWP,EAASU,SAHH,gDAKjBC,QAAQC,IAAR,MALiB,yDAAH,qDAQlBH,GACD,GAAE,CAACN,IAEsB,IAAnBG,EAAQO,QACb,wBAAI,iBAEJ,wBACGP,EAAQQ,KAAI,gBAAGX,EAAH,EAAGA,GAAIY,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,0BAAM,YAAc,IAAED,GACtB,uBAAIC,MAFGb,EADE,KAQlB,C","sources":["api/ApiService.js","components/Review/Review.jsx"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\nexport const trending = 'https://api.themoviedb.org/3/trending/movie/week';\nexport const byQuery = 'https://api.themoviedb.org/3/search/movie';\nexport const byId = `https://api.themoviedb.org/3/movie`;\n\nasync function fetchGallery(USED_URL, searchQuery = '') {\n  const axiosOptions = {\n    method: 'get',\n    url: USED_URL,\n    params: {\n      api_key: 'cbd959d2dbe2e2acae71462135de58bb',\n      query: searchQuery,\n    },\n  };\n  try {\n    const response = await axios(axiosOptions);\n    return response.data;\n  } catch {\n    toast.info(\"We're sorry, but you've reached the end of search results.\");\n  }\n}\nexport default fetchGallery;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport fetchGallery, { byId } from 'api/ApiService';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const response = await fetchGallery(`${byId}/${id}/reviews`);\n        setReviews(response.results);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchReviews();\n  }, [id]);\n\n  return reviews.length === 0 ? (\n    <h3>No Reviews.</h3>\n  ) : (\n    <ul>\n      {reviews.map(({ id, author, content }) => (\n        <li key={id}>\n          <span>Author:</span> {author}\n          <p>{content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Reviews;\n"],"names":["trending","byQuery","byId","fetchGallery","USED_URL","searchQuery","axiosOptions","method","url","params","api_key","query","axios","response","data","toast","id","useParams","useState","reviews","setReviews","useEffect","fetchReviews","results","console","log","length","map","author","content"],"sourceRoot":""}