{"version":3,"file":"static/js/718.a1b16b53.chunk.js","mappings":"wQAEaA,EAAW,mDACXC,EAAU,4CACVC,EAAI,qCAEFC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BC,GAA5B,8FAAsCC,EAAtC,+BAAoD,GAC5CC,EAAe,CACnBC,OAAQ,MACRC,IAAKJ,EACLK,OAAQ,CACNC,QAAS,mCACTC,MAAON,IANb,mBAU2BO,EAAAA,EAAAA,GAAMN,GAVjC,cAUUO,EAVV,yBAWWA,EAASC,MAXpB,gCAaIC,EAAAA,GAAAA,KAAW,8DAbf,iFAgBA,KAlBO,SAEqB,GAAbZ,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,mFCHFa,EAAS,WACpB,OACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,QACNC,UAAU,UACVC,cAAY,EACZC,cAAY,GAGjB,C,2DCaD,IAxBmB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA1C,SACGI,KAFID,EADC,KASjB,C,wJCjBD,EAA4B,6BAA5B,EAAkE,0BAAlE,EAAmG,wBAAnG,EAAmI,yB,SC8CnI,EAzCkB,SAAC,GAAkB,IAAhBK,EAAe,EAAfA,SACnB,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAgBA,OACE,mBAAQC,UAAWC,EAAnB,UACE,kBAAMD,UAAWC,EAAaL,SAZb,SAAAM,GACnBA,EAAMC,iBACmB,KAArBL,EAAUM,QAIdR,EAASE,GACTC,EAAa,KAJXrB,EAAAA,GAAAA,MAAY,2BAKf,EAIG,WACE,mBAAQ2B,KAAK,SAASL,UAAWC,EAAjC,UACE,SAAC,MAAD,OAEF,kBACEK,SArBiB,SAAAJ,GACvBH,EAAaG,EAAMK,cAAcC,MAAMC,cACxC,EAoBOD,MAAOV,EACPE,UAAWC,EACXI,KAAK,OACLK,aAAa,MACbC,WAAS,EACTC,YAAY,iCAKrB,E,SCID,EAtCe,WACb,OAAsCf,EAAAA,EAAAA,UAAS,IAA/C,eAAO7B,EAAP,KAAoB6C,EAApB,KACA,GAAkChB,EAAAA,EAAAA,WAAS,GAA3C,eAAOiB,EAAP,KAAkBC,EAAlB,KACA,GAA0BlB,EAAAA,EAAAA,WAAS,GAAnC,eAAOmB,EAAP,KAAcC,EAAd,KACA,GAA4BpB,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAe+B,EAAf,MACAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,mCAAG,uFACE,KAAvBpD,EAAYoC,OADS,iEAKvBW,GAAa,GALU,UAMAjD,EAAAA,EAAAA,IAAaF,EAAAA,GAASI,GANtB,OAMjBQ,EANiB,OAOvB0C,EAAU1C,EAAS6C,SACnBN,GAAa,GARU,kDAUvBO,QAAQN,MAAM,gCAAd,MACAC,GAAS,GAXc,0DAAH,qDAexBG,GACD,GAAE,CAACpD,IAMJ,OACE,4BACE,SAAC,EAAD,CAAW4B,SANW,SAAA5B,GACxB6C,EAAe7C,GACfkD,EAAU,GACX,IAIIJ,IAAa,SAACnC,EAAA,EAAD,IACbqC,IAAS,uBAAG,qCACZ7B,EAAOoC,OAAS,IAAK,SAACC,EAAA,EAAD,CAAYrC,OAAQA,MAG/C,C","sources":["api/ApiService.js","components/Loader/Loader.jsx","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\nexport const trending = 'https://api.themoviedb.org/3/trending/movie/week';\nexport const byQuery = 'https://api.themoviedb.org/3/search/movie';\nexport const byId = `https://api.themoviedb.org/3/movie`;\n\nasync function fetchGallery(USED_URL, searchQuery = '') {\n  const axiosOptions = {\n    method: 'get',\n    url: USED_URL,\n    params: {\n      api_key: 'cbd959d2dbe2e2acae71462135de58bb',\n      query: searchQuery,\n    },\n  };\n  try {\n    const response = await axios(axiosOptions);\n    return response.data;\n  } catch {\n    toast.info(\"We're sorry, but you've reached the end of search results.\");\n  }\n}\nexport default fetchGallery;\n","import React from 'react';\nimport { Audio } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Audio\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"green\"\n      ariaLabel=\"loading\"\n      wrapperStyle\n      wrapperClass\n    />\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(({ id, original_title }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {original_title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"Searchbar_searchbar__0FWoU\",\"button\":\"Searchbar_button__nkcjk\",\"form\":\"Searchbar_form__D-hp5\",\"input\":\"Searchbar_input__19umw\"};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ImSearch } from 'react-icons/im';\nimport { toast } from 'react-toastify';\nimport styles from 'components/Searchbar/Searchbar.module.css';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [imageName, setImageName] = useState('');\n\n  const handleNameChange = event => {\n    setImageName(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (imageName.trim() === '') {\n      toast.error('Please, input image name');\n      return;\n    }\n    onSubmit(imageName);\n    setImageName('');\n  };\n\n  return (\n    <header className={styles.searchbar}>\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={styles.button}>\n          <ImSearch />\n        </button>\n        <input\n          onChange={handleNameChange}\n          value={imageName}\n          className={styles.input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import React, { useState, useEffect } from 'react';\nimport { byQuery } from 'api/ApiService';\nimport { Loader } from 'components/Loader/Loader';\nimport fetchGallery from 'api/ApiService';\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    const fetchMoviesByQuery = async () => {\n      if (searchQuery.trim() === '') {\n        return;\n      }\n      try {\n        setIsLoading(true);\n        const response = await fetchGallery(byQuery, searchQuery);\n        setMovies(response.results);\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n        setError(true);\n      }\n    };\n\n    fetchMoviesByQuery();\n  }, [searchQuery]);\n\n  const handleInputChange = searchQuery => {\n    setSearchQuery(searchQuery);\n    setMovies([]);\n  };\n  return (\n    <div>\n      <Searchbar onSubmit={handleInputChange} />\n      {isLoading && <Loader />}\n      {error && <p> Oops ... Somesing went wrong...</p>}\n      {movies.length > 0 && <MoviesList movies={movies} />}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["trending","byQuery","byId","fetchGallery","USED_URL","searchQuery","axiosOptions","method","url","params","api_key","query","axios","response","data","toast","Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClass","movies","location","useLocation","map","id","original_title","to","state","from","onSubmit","useState","imageName","setImageName","className","styles","event","preventDefault","trim","type","onChange","currentTarget","value","toLowerCase","autoComplete","autoFocus","placeholder","setSearchQuery","isLoading","setIsLoading","error","setError","setMovies","useEffect","fetchMoviesByQuery","results","console","length","MoviesList"],"sourceRoot":""}