{"version":3,"file":"static/js/76.8fdf0042.chunk.js","mappings":"uQAEaA,EAAW,mDACXC,EAAU,4CACVC,EAAI,qCAEFC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BC,GAA5B,8FAAsCC,EAAtC,+BAAoD,GAC5CC,EAAe,CACnBC,OAAQ,MACRC,IAAKJ,EACLK,OAAQ,CACNC,QAAS,mCACTC,MAAON,IANb,mBAU2BO,EAAAA,EAAAA,GAAMN,GAVjC,cAUUO,EAVV,yBAWWA,EAASC,MAXpB,gCAaIC,EAAAA,GAAAA,KAAW,8DAbf,iFAgBA,KAlBO,SAEqB,GAAbZ,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,qICLf,EAA2B,uBAA3B,EAA8D,wB,SCgD9D,EA7Ca,WACX,IAAQa,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAESnB,EAAAA,EAAAA,IAAa,GAAD,OAAID,EAAAA,GAAJ,YAAYc,EAAZ,aAFrB,OAERH,EAFQ,OAGdO,EAAQP,EAASM,MAHH,gDAKdI,QAAQC,IAAR,MALc,yDAAH,qDAQfF,GACD,GAAE,CAACN,KAGF,+BAEI,wBACGG,EAAKM,KAAI,gBAAGT,EAAH,EAAGA,GAAIU,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,cAAeC,EAApC,EAAoCA,UAApC,OACR,2BACE,gBACEC,IACEH,EAAY,yCAC0BA,GAClC,sCAENI,UAAWC,EACXC,IAAKL,KAEP,eAAGG,UAAWC,EAAd,WACE,0BAAM,YAAc,IAAEJ,MAExB,eAAGG,UAAWC,EAAd,WACE,0BAAM,eAAiB,IAAEH,OAdpBZ,EADD,OAuBnB,C","sources":["api/ApiService.js","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\nexport const trending = 'https://api.themoviedb.org/3/trending/movie/week';\nexport const byQuery = 'https://api.themoviedb.org/3/search/movie';\nexport const byId = `https://api.themoviedb.org/3/movie`;\n\nasync function fetchGallery(USED_URL, searchQuery = '') {\n  const axiosOptions = {\n    method: 'get',\n    url: USED_URL,\n    params: {\n      api_key: 'cbd959d2dbe2e2acae71462135de58bb',\n      query: searchQuery,\n    },\n  };\n  try {\n    const response = await axios(axiosOptions);\n    return response.data;\n  } catch {\n    toast.info(\"We're sorry, but you've reached the end of search results.\");\n  }\n}\nexport default fetchGallery;\n","// extracted by mini-css-extract-plugin\nexport default {\"cast_img\":\"Cast_cast_img__fJUn3\",\"cast_text\":\"Cast_cast_text__yOs+U\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport fetchGallery, { byId } from 'api/ApiService';\nimport styles from './Cast.module.css';\nconst Cast = () => {\n  const { id } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const response = await fetchGallery(`${byId}/${id}/credits`);\n        setCast(response.cast);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchCast();\n  }, [id]);\n\n  return (\n    <>\n      {\n        <ul>\n          {cast.map(({ id, profile_path, original_name, character }) => (\n            <li key={id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                    : 'https://via.placeholder.com/333x500'\n                }\n                className={styles.cast_img}\n                alt={original_name}\n              />\n              <p className={styles.cast_text}>\n                <span> Actor:</span> {original_name}\n              </p>\n              <p className={styles.cast_text}>\n                <span>Character:</span> {character}\n              </p>\n            </li>\n          ))}\n        </ul>\n      }\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["trending","byQuery","byId","fetchGallery","USED_URL","searchQuery","axiosOptions","method","url","params","api_key","query","axios","response","data","toast","id","useParams","useState","cast","setCast","useEffect","fetchCast","console","log","map","profile_path","original_name","character","src","className","styles","alt"],"sourceRoot":""}