{"version":3,"file":"static/js/802.b6be1a85.chunk.js","mappings":"wQAEaA,EAAW,mDACXC,EAAU,4CACVC,EAAI,qCAEFC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BC,GAA5B,8FAAsCC,EAAtC,+BAAoD,GAC5CC,EAAe,CACnBC,OAAQ,MACRC,IAAKJ,EACLK,OAAQ,CACNC,QAAS,mCACTC,MAAON,IANb,mBAU2BO,EAAAA,EAAAA,GAAMN,GAVjC,cAUUO,EAVV,OAWIC,QAAQC,IAAIF,EAASG,MAXzB,kBAYWH,EAASG,MAZpB,kCAcIC,EAAAA,GAAAA,KAAW,8DAdf,kFAiBA,KAnBO,SAEqB,GAAbd,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,mFCHFe,EAAS,WACpB,OACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,QACNC,UAAU,UACVC,cAAY,EACZC,cAAY,GAGjB,C,kHC+BD,UAzCgB,WACd,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,oGAEjBJ,GAAa,GAFI,UAGM7B,EAAAA,EAAAA,IAAa,GAAD,OAAID,EAAAA,GAAJ,YAAYwB,EAAZ,aAHlB,OAGXb,EAHW,OAIjBiB,EAAWjB,EAASwB,SACpBL,GAAa,GALI,gDAOjBlB,QAAQC,IAAR,MACAmB,GAAS,GARQ,yDAAH,qDAWlBE,GACD,GAAE,CAACV,KAGF,gCACGK,IAAa,SAAC,IAAD,IACbE,IAAS,uBAAG,qCACO,IAAnBJ,EAAQS,QACP,wBAAI,iBAEJ,wBACGT,EAAQU,KAAI,gBAAGb,EAAH,EAAGA,GAAIc,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,0BAAM,YAAc,IAAED,GACtB,uBAAIC,MAFGf,EADE,QAUtB,C","sources":["api/ApiService.js","components/Loader/Loader.jsx","components/Review/Review.jsx"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\nexport const trending = 'https://api.themoviedb.org/3/trending/movie/week';\nexport const byQuery = 'https://api.themoviedb.org/3/search/movie';\nexport const byId = `https://api.themoviedb.org/3/movie`;\n\nasync function fetchGallery(USED_URL, searchQuery = '') {\n  const axiosOptions = {\n    method: 'get',\n    url: USED_URL,\n    params: {\n      api_key: 'cbd959d2dbe2e2acae71462135de58bb',\n      query: searchQuery,\n    },\n  };\n  try {\n    const response = await axios(axiosOptions);\n    console.log(response.data);\n    return response.data;\n  } catch {\n    toast.info(\"We're sorry, but you've reached the end of search results.\");\n  }\n}\nexport default fetchGallery;\n","import React from 'react';\nimport { Audio } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Audio\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"green\"\n      ariaLabel=\"loading\"\n      wrapperStyle\n      wrapperClass\n    />\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport fetchGallery, { byId } from 'api/ApiService';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        setIsLoading(true);\n        const response = await fetchGallery(`${byId}/${id}/reviews`);\n        setReviews(response.results);\n        setIsLoading(false);\n      } catch (e) {\n        console.log(e);\n        setError(true);\n      }\n    };\n    fetchReviews();\n  }, [id]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <p> Oops ... Somesing went wrong...</p>}\n      {reviews.length === 0 ? (\n        <h3>No Reviews.</h3>\n      ) : (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <span>Author:</span> {author}\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["trending","byQuery","byId","fetchGallery","USED_URL","searchQuery","axiosOptions","method","url","params","api_key","query","axios","response","console","log","data","toast","Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClass","id","useParams","useState","reviews","setReviews","isLoading","setIsLoading","error","setError","useEffect","fetchReviews","results","length","map","author","content"],"sourceRoot":""}