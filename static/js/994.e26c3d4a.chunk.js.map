{"version":3,"file":"static/js/994.e26c3d4a.chunk.js","mappings":"wQAEaA,EAAW,mDACXC,EAAU,4CACVC,EAAI,qCAEFC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BC,GAA5B,8FAAsCC,EAAtC,+BAAoD,GAC5CC,EAAe,CACnBC,OAAQ,MACRC,IAAKJ,EACLK,OAAQ,CACNC,QAAS,mCACTC,MAAON,IANb,mBAU2BO,EAAAA,EAAAA,GAAMN,GAVjC,cAUUO,EAVV,yBAWWA,EAASC,MAXpB,gCAaIC,EAAAA,GAAAA,KAAW,8DAbf,iFAgBA,KAlBO,SAEqB,GAAbZ,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,uJCHFa,EAAS,WACpB,OACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,QACNC,UAAU,UACVC,cAAY,EACZC,cAAY,GAGjB,E,kBCdD,EAA4B,6BAA5B,EAAkE,0BAAlE,EAAmG,wBAAnG,EAAmI,yBC8CnI,EAzCkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAgBA,OACE,mBAAQC,UAAWC,EAAnB,UACE,kBAAMD,UAAWC,EAAaL,SAZb,SAAAM,GACnBA,EAAMC,iBACmB,KAArBL,EAAUM,QAIdR,EAASE,GACTC,EAAa,KAJXZ,EAAAA,GAAAA,MAAY,2BAKf,EAIG,WACE,mBAAQkB,KAAK,SAASL,UAAWC,EAAjC,UACE,SAAC,MAAD,OAEF,kBACEK,SArBiB,SAAAJ,GACvBH,EAAaG,EAAMK,cAAcC,MAAMC,cACxC,EAoBOD,MAAOV,EACPE,UAAWC,EACXI,KAAK,OACLK,aAAa,MACbC,WAAS,EACTC,YAAY,iCAKrB,ECYD,EA7Ce,WACb,OAAsCf,EAAAA,EAAAA,UAAS,IAA/C,eAAOpB,EAAP,KAAoBoC,EAApB,KACA,GAAkChB,EAAAA,EAAAA,WAAS,GAA3C,eAAOiB,EAAP,KAAkBC,EAAlB,KACA,GAA4BlB,EAAAA,EAAAA,UAAS,IAArC,eAAOmB,EAAP,KAAeC,EAAf,MACAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,mCAAG,uFACE,KAAvB1C,EAAY2B,OADS,iEAKvBW,GAAa,GALU,UAMAxC,EAAAA,EAAAA,IAAaF,EAAAA,GAASI,GANtB,OAMjBQ,EANiB,OAOvBgC,EAAUhC,EAASmC,SACnBL,GAAa,GARU,kDAUvBM,QAAQC,MAAM,gCAAd,MAVuB,0DAAH,qDAcxBH,GACD,GAAE,CAAC1C,KAEJyC,EAAAA,EAAAA,YAAU,WACRF,EAAOO,OAAS,GAAKC,aAAaC,QAAQ,SAAUC,KAAKC,UAAUX,GACpE,GAAE,CAACA,IAMJ,OACE,4BACE,SAAC,EAAD,CAAWpB,SANW,SAAAnB,GACxBoC,EAAepC,GACfwC,EAAU,GACX,IAIIH,IAAa,SAAC1B,EAAD,KACd,wBACG4B,EAAOY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAArB,SAA4BC,KADrBD,EADC,QAQnB,C","sources":["api/ApiService.js","components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\nexport const trending = 'https://api.themoviedb.org/3/trending/movie/week';\nexport const byQuery = 'https://api.themoviedb.org/3/search/movie';\nexport const byId = `https://api.themoviedb.org/3/movie`;\n\nasync function fetchGallery(USED_URL, searchQuery = '') {\n  const axiosOptions = {\n    method: 'get',\n    url: USED_URL,\n    params: {\n      api_key: 'cbd959d2dbe2e2acae71462135de58bb',\n      query: searchQuery,\n    },\n  };\n  try {\n    const response = await axios(axiosOptions);\n    return response.data;\n  } catch {\n    toast.info(\"We're sorry, but you've reached the end of search results.\");\n  }\n}\nexport default fetchGallery;\n","import React from 'react';\nimport { Audio } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Audio\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"green\"\n      ariaLabel=\"loading\"\n      wrapperStyle\n      wrapperClass\n    />\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"Searchbar_searchbar__0FWoU\",\"button\":\"Searchbar_button__nkcjk\",\"form\":\"Searchbar_form__D-hp5\",\"input\":\"Searchbar_input__19umw\"};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ImSearch } from 'react-icons/im';\nimport { toast } from 'react-toastify';\nimport styles from 'components/Searchbar/Searchbar.module.css';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [imageName, setImageName] = useState('');\n\n  const handleNameChange = event => {\n    setImageName(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (imageName.trim() === '') {\n      toast.error('Please, input image name');\n      return;\n    }\n    onSubmit(imageName);\n    setImageName('');\n  };\n\n  return (\n    <header className={styles.searchbar}>\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={styles.button}>\n          <ImSearch />\n        </button>\n        <input\n          onChange={handleNameChange}\n          value={imageName}\n          className={styles.input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import React, { useState, useEffect } from 'react';\nimport { byQuery } from 'api/ApiService';\nimport { Link } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport fetchGallery from 'api/ApiService';\nimport Searchbar from 'components/Searchbar/Searchbar';\n// import MoviesGallery from 'components/ImageGallery/ImageGallery';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    const fetchMoviesByQuery = async () => {\n      if (searchQuery.trim() === '') {\n        return;\n      }\n      try {\n        setIsLoading(true);\n        const response = await fetchGallery(byQuery, searchQuery);\n        setMovies(response.results);\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n      }\n    };\n\n    fetchMoviesByQuery();\n  }, [searchQuery]);\n\n  useEffect(() => {\n    movies.length > 0 && localStorage.setItem('movies', JSON.stringify(movies));\n  }, [movies]);\n\n  const handleInputChange = searchQuery => {\n    setSearchQuery(searchQuery);\n    setMovies([]);\n  };\n  return (\n    <div>\n      <Searchbar onSubmit={handleInputChange} />\n      {isLoading && <Loader />}\n      <ul>\n        {movies.map(({ id, original_title }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`}>{original_title}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["trending","byQuery","byId","fetchGallery","USED_URL","searchQuery","axiosOptions","method","url","params","api_key","query","axios","response","data","toast","Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClass","onSubmit","useState","imageName","setImageName","className","styles","event","preventDefault","trim","type","onChange","currentTarget","value","toLowerCase","autoComplete","autoFocus","placeholder","setSearchQuery","isLoading","setIsLoading","movies","setMovies","useEffect","fetchMoviesByQuery","results","console","error","length","localStorage","setItem","JSON","stringify","map","id","original_title","to"],"sourceRoot":""}