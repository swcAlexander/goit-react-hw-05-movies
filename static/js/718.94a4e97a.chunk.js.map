{"version":3,"file":"static/js/718.94a4e97a.chunk.js","mappings":"wQAEaA,EAAW,mDACXC,EAAU,4CACVC,EAAI,qCAEFC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BC,GAA5B,8FAAsCC,EAAtC,+BAAoD,GAC5CC,EAAe,CACnBC,OAAQ,MACRC,IAAKJ,EACLK,OAAQ,CACNC,QAAS,mCACTC,MAAON,IANb,mBAU2BO,EAAAA,EAAAA,GAAMN,GAVjC,cAUUO,EAVV,OAWIC,QAAQC,IAAIF,EAASG,MAXzB,kBAYWH,EAASG,MAZpB,kCAcIC,EAAAA,GAAAA,KAAW,8DAdf,kFAiBA,KAnBO,SAEqB,GAAbd,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,mFCHFe,EAAS,WACpB,OACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,QACNC,UAAU,UACVC,cAAY,EACZC,cAAY,GAGjB,C,2DCaD,IAxBmB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA1C,SACGI,KAFID,EADC,KASjB,C,+ICjBD,EAA4B,6BAA5B,EAAkE,0BAAlE,EAAmG,wBAAnG,EAAmI,yB,SC0CnI,EArCkB,SAAC,GAAkB,IAAhBK,EAAe,EAAfA,SACnB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOzB,EAAP,KAAc0B,EAAd,KAYA,OACE,mBAAQC,UAAWC,EAAnB,UACE,kBAAMD,UAAWC,EAAaJ,SAZb,SAAAK,GACnBA,EAAMC,iBAENN,EAAS,CAAExB,MAAAA,GACZ,EAQG,WACE,mBAAQ+B,KAAK,SAASJ,UAAWC,EAAjC,UACE,SAAC,MAAD,OAEF,kBACEI,SAXmB,SAAC,GAA2B,IAAfC,EAAc,EAAxBC,OAAUD,MACtCP,EAASO,EACV,EAUOA,MAAOjC,EACP2B,UAAWC,EACXG,KAAK,OACLI,aAAa,MACbC,WAAS,EACTC,YAAY,iCAKrB,E,iBCMD,EAnCe,WACb,OAAkCZ,EAAAA,EAAAA,WAAS,GAA3C,eAAOa,EAAP,KAAkBC,EAAlB,KACA,GAA0Bd,EAAAA,EAAAA,WAAS,GAAnC,eAAOe,EAAP,KAAcC,EAAd,KACA,GAA4BhB,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAe2B,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACR,IAAMpD,EAAckD,EAAaG,IAAI,SACrC,GAAKrD,EAAL,CACA,IAAMsD,EAAkB,mCAAG,oGAEvBT,GAAa,GAFU,UAGA/C,EAAAA,EAAAA,IAAaF,EAAAA,GAASI,GAHtB,OAGjBQ,EAHiB,OAIvBwC,EAAUxC,EAAS+C,SACnBV,GAAa,GACbpC,QAAQC,IAAIF,GANW,kDAQvBC,QAAQqC,MAAM,gCAAd,MACAC,GAAS,GATc,0DAAH,qDAaxBO,GAdwB,CAezB,GAAE,CAACJ,KAGF,4BACE,SAAC,EAAD,CAAWpB,SAAUqB,IACpBP,IAAa,SAAC/B,EAAA,EAAD,IACbiC,IAAS,uBAAG,qCACZzB,EAAOmC,OAAS,IAAK,SAACC,EAAA,EAAD,CAAYpC,OAAQA,MAG/C,C","sources":["api/ApiService.js","components/Loader/Loader.jsx","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\nexport const trending = 'https://api.themoviedb.org/3/trending/movie/week';\nexport const byQuery = 'https://api.themoviedb.org/3/search/movie';\nexport const byId = `https://api.themoviedb.org/3/movie`;\n\nasync function fetchGallery(USED_URL, searchQuery = '') {\n  const axiosOptions = {\n    method: 'get',\n    url: USED_URL,\n    params: {\n      api_key: 'cbd959d2dbe2e2acae71462135de58bb',\n      query: searchQuery,\n    },\n  };\n  try {\n    const response = await axios(axiosOptions);\n    console.log(response.data);\n    return response.data;\n  } catch {\n    toast.info(\"We're sorry, but you've reached the end of search results.\");\n  }\n}\nexport default fetchGallery;\n","import React from 'react';\nimport { Audio } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Audio\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"green\"\n      ariaLabel=\"loading\"\n      wrapperStyle\n      wrapperClass\n    />\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(({ id, original_title }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {original_title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"Searchbar_searchbar__0FWoU\",\"button\":\"Searchbar_button__nkcjk\",\"form\":\"Searchbar_form__D-hp5\",\"input\":\"Searchbar_input__19umw\"};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ImSearch } from 'react-icons/im';\n\nimport styles from 'components/Searchbar/Searchbar.module.css';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    onSubmit({ query });\n  };\n\n  const handleSearchParams = ({ target: { value } }) => {\n    setQuery(value);\n  };\n\n  return (\n    <header className={styles.searchbar}>\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={styles.button}>\n          <ImSearch />\n        </button>\n        <input\n          onChange={handleSearchParams}\n          value={query}\n          className={styles.input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import React, { useState, useEffect } from 'react';\nimport { byQuery } from 'api/ApiService';\nimport { Loader } from 'components/Loader/Loader';\nimport fetchGallery from 'api/ApiService';\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const searchQuery = searchParams.get('query');\n    if (!searchQuery) return;\n    const fetchMoviesByQuery = async () => {\n      try {\n        setIsLoading(true);\n        const response = await fetchGallery(byQuery, searchQuery);\n        setMovies(response.results);\n        setIsLoading(false);\n        console.log(response);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n        setError(true);\n      }\n    };\n\n    fetchMoviesByQuery();\n  }, [searchParams]);\n\n  return (\n    <div>\n      <Searchbar onSubmit={setSearchParams} />\n      {isLoading && <Loader />}\n      {error && <p>Oops ... Something went wrong...</p>}\n      {movies.length > 0 && <MoviesList movies={movies} />}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["trending","byQuery","byId","fetchGallery","USED_URL","searchQuery","axiosOptions","method","url","params","api_key","query","axios","response","console","log","data","toast","Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClass","movies","location","useLocation","map","id","original_title","to","state","from","onSubmit","useState","setQuery","className","styles","event","preventDefault","type","onChange","value","target","autoComplete","autoFocus","placeholder","isLoading","setIsLoading","error","setError","setMovies","useSearchParams","searchParams","setSearchParams","useEffect","get","fetchMoviesByQuery","results","length","MoviesList"],"sourceRoot":""}