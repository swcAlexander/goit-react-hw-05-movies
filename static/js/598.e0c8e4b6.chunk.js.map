{"version":3,"file":"static/js/598.e0c8e4b6.chunk.js","mappings":"wQAEaA,EAAW,mDACXC,EAAU,4CACVC,EAAI,qCAEFC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BC,GAA5B,8FAAsCC,EAAtC,+BAAoD,GAC5CC,EAAe,CACnBC,OAAQ,MACRC,IAAKJ,EACLK,OAAQ,CACNC,QAAS,mCACTC,MAAON,IANb,mBAU2BO,EAAAA,EAAAA,GAAMN,GAVjC,cAUUO,EAVV,OAWIC,QAAQC,IAAIF,EAASG,MAXzB,kBAYWH,EAASG,MAZpB,kCAcIC,EAAAA,GAAAA,KAAW,8DAdf,kFAiBA,KAnBO,SAEqB,GAAbd,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,mFCHFe,EAAS,WACpB,OACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,QACNC,UAAU,UACVC,cAAY,EACZC,cAAY,GAGjB,C,uJCdD,EAAuB,0BAAvB,EAA6D,+BAA7D,EAAqG,4BAArG,EAAkJ,oCAAlJ,EAAqM,kC,SCmFrM,EA7EyB,WAAO,IAAD,IAC7B,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACA,GAA0BN,EAAAA,EAAAA,WAAS,GAAnC,eAAOO,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,QAAM,iBAACH,QAAD,IAACA,GAAD,UAACA,EAAUI,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,KAkB/C,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,oGAEtBV,GAAa,GAFS,UAGC7B,EAAAA,EAAAA,IAAa,GAAD,OAAID,EAAAA,GAAJ,YAAY2B,IAHzB,OAGhBhB,EAHgB,OAItBe,EAASf,GACTmB,GAAa,GALS,gDAOtBlB,QAAQmB,MAAM,gCAAd,MACAC,GAAS,GARa,yDAAH,qDAYvBQ,GACD,GAAE,CAACb,IAECF,GAKH,gCACGI,IAAa,SAACb,EAAA,EAAD,IACbe,IAAS,uBAAG,qCACZN,IACC,iCACE,SAAC,KAAD,CAAMgB,GAAIN,EAAOO,QAASC,UAAWC,EAArC,SAAkD,aAGlD,iBAAKD,UAAWC,EAAhB,WACE,gBACEC,IACEpB,EAAMqB,YAAN,0CACuCrB,EAAMqB,aACzC,sCAENH,UAAWC,EACX1B,MAAO,IACP6B,IAAI,YAEN,4BACE,wBAAKtB,EAAMuB,SACX,0BAAI,eAAaC,KAAKC,MAA2B,GAArBzB,EAAM0B,cAAmB,QACrD,yBAAG,aACQ,kBAAM,IAAE1B,EAAM2B,aAEzB,wBAAI,aACJ,uBAAI3B,EAAM4B,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,QAC/C,uBAAG,4BACH,iBAAKd,UAAWC,EAAhB,WACE,SAAC,KAAD,CAAMH,GAAE,kBAAad,EAAb,SAAwBgB,UAAWC,EAA3C,SAAgE,UAGhE,SAAC,KAAD,CACEH,GAAE,kBAAad,EAAb,YACFgB,UAAWC,EAFb,SAGC,sBAMP,SAAC,KAAD,WA7CC,yBAAK,cAkDf,C","sources":["api/ApiService.js","components/Loader/Loader.jsx","webpack://react-homework-template/./src/pages/MovieDetail.module.css?1c5c","pages/MovieDetail.jsx"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\nexport const trending = 'https://api.themoviedb.org/3/trending/movie/week';\nexport const byQuery = 'https://api.themoviedb.org/3/search/movie';\nexport const byId = `https://api.themoviedb.org/3/movie`;\n\nasync function fetchGallery(USED_URL, searchQuery = '') {\n  const axiosOptions = {\n    method: 'get',\n    url: USED_URL,\n    params: {\n      api_key: 'cbd959d2dbe2e2acae71462135de58bb',\n      query: searchQuery,\n    },\n  };\n  try {\n    const response = await axios(axiosOptions);\n    console.log(response.data);\n    return response.data;\n  } catch {\n    toast.info(\"We're sorry, but you've reached the end of search results.\");\n  }\n}\nexport default fetchGallery;\n","import React from 'react';\nimport { Audio } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Audio\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"green\"\n      ariaLabel=\"loading\"\n      wrapperStyle\n      wrapperClass\n    />\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"back\":\"MovieDetail_back__d6cYi\",\"container\":\"MovieDetail_container__MW23Q\",\"poster\":\"MovieDetail_poster__+RzWb\",\"container_mini\":\"MovieDetail_container_mini__Kfxud\",\"cast_reviews\":\"MovieDetail_cast_reviews__Ats5s\"};","import { useEffect, useState, useRef } from 'react';\nimport { Link, useParams, Outlet, useLocation } from 'react-router-dom';\nimport { byId } from 'api/ApiService';\nimport { Loader } from 'components/Loader/Loader';\nimport fetchGallery from 'api/ApiService';\nimport styles from 'pages/MovieDetail.module.css';\n\nconst MovieDetailsPage = () => {\n  const [movie, setMovie] = useState(null);\n  const { id } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const location = useLocation();\n  const goBack = useRef(location?.state?.from ?? '/');\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        setIsLoading(true);\n        const response = await fetchGallery(`${byId}/${id}`);\n        setMovie(response);\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n        setError(true);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [id]);\n\n  if (!movie) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <p> Oops ... Somesing went wrong...</p>}\n      {movie && (\n        <>\n          <Link to={goBack.current} className={styles.back}>\n            Go Back\n          </Link>\n          <div className={styles.container}>\n            <img\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                  : 'https://via.placeholder.com/333x500'\n              }\n              className={styles.poster}\n              width={250}\n              alt=\"poster\"\n            />\n            <div>\n              <h1>{movie.title}</h1>\n              <h2>User score: {Math.round(movie.vote_average * 10)}%</h2>\n              <p>\n                Overview <br /> {movie.overview}\n              </p>\n              <h2>Genres:</h2>\n              <p>{movie.genres.map(genre => genre.name).join(' ')}</p>\n              <p>Additional information</p>\n              <div className={styles.container_mini}>\n                <Link to={`/movies/${id}/cast`} className={styles.cast_reviews}>\n                  Cast\n                </Link>\n                <Link\n                  to={`/movies/${id}/reviews`}\n                  className={styles.cast_reviews}\n                >\n                  Reviews\n                </Link>\n              </div>\n            </div>\n          </div>\n          <Outlet />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["trending","byQuery","byId","fetchGallery","USED_URL","searchQuery","axiosOptions","method","url","params","api_key","query","axios","response","console","log","data","toast","Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClass","useState","movie","setMovie","id","useParams","isLoading","setIsLoading","error","setError","location","useLocation","goBack","useRef","state","from","useEffect","fetchMovieDetails","to","current","className","styles","src","poster_path","alt","title","Math","round","vote_average","overview","genres","map","genre","name","join"],"sourceRoot":""}